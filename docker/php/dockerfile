FROM node:18 AS assets-build

WORKDIR /src
COPY src /src/

RUN npm install
RUN npm run prod

FROM php:8.1-fpm-alpine

ARG PHPGROUP
ARG PHPUSER
ARG APP_VERSION
ARG GITHUB_RUN_NUMBER
ARG GITHUB_RUN_ID

ENV APP_VERSION=${APP_VERSION}
ENV PHPGROUP=${PHPGROUP}
ENV PHPUSER=${PHPUSER}
ENV GITHUB_RUN_NUMBER=${GITHUB_RUN_NUMBER}
ENV GITHUB_RUN_ID=${GITHUB_RUN_ID}

ENV COMPOSER_ALLOW_SUPERUSER=1

RUN addgroup -g 1000 ${PHPGROUP} && adduser -g ${PHPGROUP} -s /bin/sh -D ${PHPUSER}; exit 0

RUN sed -i "s/user = www-data/user = ${PHPUSER}/g" /usr/local/etc/php-fpm.d/www.conf
RUN sed -i "s/group = www-data/group = ${PHPGROUP}/g" /usr/local/etc/php-fpm.d/www.conf

RUN docker-php-ext-install pdo pdo_mysql
RUN apk add --update --no-cache bind-tools

ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/

# Install PHP Extensions
RUN chmod +x /usr/local/bin/install-php-extensions && sync && \
    install-php-extensions gd zip intl imap xsl pgsql opcache bcmath mysqli pdo_mysql redis pcntl

RUN docker-php-ext-configure \
    opcache --enable-opcache

# Add Build Dependencies
RUN apk add --no-cache --virtual .build-deps  \
    zlib-dev \
    libjpeg-turbo-dev \
    libpng-dev \
    libxml2-dev \
    bzip2-dev \
    zip \
    libzip-dev

# Add Production Dependencies
RUN apk add --update --no-cache \
    jpegoptim \
    pngquant \
    optipng \
    supervisor \
    nano \
    bash \
    icu-dev \
    freetype-dev \
    mysql-client

RUN mkdir -p /usr/src/php/ext/redis \
    && curl -L https://github.com/phpredis/phpredis/archive/5.3.4.tar.gz | tar xvz -C /usr/src/php/ext/redis --strip 1 \
    && echo 'redis' >> /usr/src/php-available-exts \
    && docker-php-ext-install redis

COPY ./docker/php/start.sh /usr/local/bin/start
COPY ./src /var/www/html
RUN chown -R www-data:www-data /var/www/html
USER www-data

COPY --from=assets-build /src/public /var/www/html/public

WORKDIR /var/www/html
COPY --from=composer:2 /usr/bin/composer /usr/bin/composer
RUN composer install  \
    --ignore-platform-reqs \
    --no-ansi \
    --no-dev \
    --no-autoloader \
    --no-interaction \
    --no-scripts

RUN composer dump-autoload --optimize --no-dev --no-scripts

CMD ["/usr/local/bin/start"]